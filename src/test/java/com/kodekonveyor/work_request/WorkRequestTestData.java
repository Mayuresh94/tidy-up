package com.kodekonveyor.work_request;

import java.util.ArrayList;
import java.util.List;

import com.kodekonveyor.authentication.UserTestData;

public class WorkRequestTestData {

	public final String NULL_WORKTYPE = "Blank Work Type";
	public final String OWNER_ID = "4242";
	public final String WORK_TYPE = "CLEANING";
	public final Long WORK_REQUEST_ID = (long) 42;
	public final WorkRequestDTO WORK_REQUEST_DTO;
	public WorkRequestListDTO WORK_REQUEST_LIST_DTO;
	public final String DESCRIPTION = "Clean up the mess";
	public final boolean IS_ACTIVE = true;
	public final WorkRequestEntity WORK_REQUEST_ENTITY;
	public List<WorkRequestEntity> WORK_REQUEST_ENTITY_LIST;
	public final String NULL_OWNERID = "No OwnerId";
	public final UserTestData userTestData;
	public final AddressTestData addressTestData;
	public final String INVALID_OWNERID = "Invalid OwnerId";
	public final String NO_WORKREQUESTS = "No Work Request";
	public final String NEGATIVE_OWNERID = "Negative Owner Id";
	public final String NEGATIVE_OWNERID_ID = "-4536";
	public final String INVALID_OWNERID_ID = "4245";
	public final List<Object> EMPTY_LIST = new ArrayList<Object>();
	public final String NO_WORKREQUESTS_ID = "4243";
	public final String ALPHACHAR_OWNERID = "Contains Alphabet or Special Character";
	public final String ALPHACHAR_OWNERID_ID = "34g&";
	public final String LENGTHEXCEED_OWNERID = "Contains more than 4 digits";
	public final String LENGTHEXCEED_OWNERID_ID = "4356734";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST;
	public final String customerId = "4242";
	public final String NegativeCustomerId = "-4242";

	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_WORKTYPE;
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_DESCRIPTION;
	public final String NULL_DESCRIPTION = "Blank Description";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_ADDRESS;
	public final String NULL_ADDRESS = "Blank Address";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_CUSTOMERID;
	public final String NULL_CUSTOMERID = "Blank Customer Id";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_ADDRESS_STRING;
	public final String NULL_ADDRESS_STRING = "Blank Address Field";
	public final String NEGATIVE_CUSTOMERID = "Negative Customer Id";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID;
	public final String ALPHACHAR_CUSTOMERID = "Customer Id contains Alphabet OR Special Characters";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID;
	public final String LENGTH_CUSTOMERID = "Length of Customer Id cannot be more be 4 digit";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_LENGTH_CUSTOMERID;
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_INVALID_CUSTOMERID;
	public final String DIGIT_SPECIAL_CHARACTER_WORKTYPE = "Work Type contains digits or special characters";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE;
	public final String WorkType_Digit_Special_Characer = "456$%$";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_INVALID_WORKTYPE;
	public final String InvalidWorkType = "CARPENTRY";
	public final String INVALID_WORKTYPE = "Invalid Work Type";
	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_CITY;

	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_NULL_COUNTRY = new CreateWorkRequestDTO();

	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_COUNTRY_LENGTH;

	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_COUNTRY_ALPHABET;

	public final CreateWorkRequestDTO CREATE_WORK_REQUEST_ADDRESS_LENGTH;

	public WorkRequestTestData(final UserTestData userTestData) {
		CREATE_WORK_REQUEST_ADDRESS_LENGTH = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_COUNTRY_ALPHABET = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_COUNTRY_LENGTH = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_NULL_CITY = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_INVALID_WORKTYPE = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_INVALID_CUSTOMERID = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_LENGTH_CUSTOMERID = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_NULL_ADDRESS_STRING = new CreateWorkRequestDTO();
		addressTestData = new AddressTestData();

		CREATE_WORK_REQUEST_NULL_CUSTOMERID = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_NULL_ADDRESS = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_NULL_DESCRIPTION = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST_NULL_WORKTYPE = new CreateWorkRequestDTO();
		CREATE_WORK_REQUEST = new CreateWorkRequestDTO();
		this.userTestData = userTestData;

		CREATE_WORK_REQUEST.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST.setAddress(addressTestData.ADDRESS_DTO);

		WORK_REQUEST_DTO = new WorkRequestDTO();
		WORK_REQUEST_LIST_DTO = new WorkRequestListDTO();
		WORK_REQUEST_ENTITY = new WorkRequestEntity();
		WORK_REQUEST_LIST_DTO.setRequests(List.of(WORK_REQUEST_DTO));
		WORK_REQUEST_LIST_DTO = new WorkRequestListDTO();
		WORK_REQUEST_ENTITY_LIST = List.of(WORK_REQUEST_ENTITY);
		WORK_REQUEST_ENTITY.setCustomer(userTestData.USER);
		WORK_REQUEST_ENTITY.setWorkType(WORK_TYPE);
		WORK_REQUEST_ENTITY.setId(WORK_REQUEST_ID);
		WORK_REQUEST_ENTITY.setAddress(addressTestData.ADDRESS_ENTITY);
		WORK_REQUEST_ENTITY.setDescription(DESCRIPTION);
		WORK_REQUEST_DTO.setWorkRequestId(WORK_REQUEST_ID);
		WORK_REQUEST_DTO.setWorkType(WORK_TYPE);
		WORK_REQUEST_DTO.setAddress(addressTestData.ADDRESS_DTO);
		WORK_REQUEST_DTO.setDescription(DESCRIPTION);
		WORK_REQUEST_LIST_DTO.setRequests(List.of(WORK_REQUEST_DTO));
		WORK_REQUEST_ENTITY_LIST = List.of(WORK_REQUEST_ENTITY);

		CREATE_WORK_REQUEST_NULL_WORKTYPE.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_NULL_WORKTYPE.setDescription(DESCRIPTION);
//		CREATE_WORK_REQUEST_NULL_WORKTYPE.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_WORKTYPE.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_NULL_WORKTYPE.setWorkTye(null);

		CREATE_WORK_REQUEST_NULL_DESCRIPTION.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_NULL_DESCRIPTION.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NULL_DESCRIPTION.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_DESCRIPTION.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_NULL_DESCRIPTION.setDescription(null);

		CREATE_WORK_REQUEST_NULL_ADDRESS.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_NULL_ADDRESS.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NULL_ADDRESS.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_ADDRESS.setAddress(null);
		CREATE_WORK_REQUEST_NULL_ADDRESS.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_NULL_ADDRESS_STRING.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_NULL_ADDRESS_STRING.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NULL_ADDRESS_STRING.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_ADDRESS_STRING.setAddress(addressTestData.ADDRESS_DTO_NULL_STRING);
		CREATE_WORK_REQUEST_NULL_ADDRESS_STRING.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_NULL_CITY.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_NULL_CITY.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NULL_CITY.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_CITY.setAddress(addressTestData.ADDRESS_DTO_NULL_CITY);

		CREATE_WORK_REQUEST_COUNTRY_LENGTH.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_COUNTRY_LENGTH.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_COUNTRY_LENGTH.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_COUNTRY_LENGTH.setAddress(addressTestData.ADDRESS_DTO_COUNTRY_LENGTH);

		CREATE_WORK_REQUEST_NULL_COUNTRY.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_NULL_COUNTRY.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NULL_COUNTRY.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_COUNTRY.setAddress(addressTestData.ADDRESS_DTO_NULL_COUNRTY);

		CREATE_WORK_REQUEST_COUNTRY_ALPHABET.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_COUNTRY_ALPHABET.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_COUNTRY_ALPHABET.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_COUNTRY_ALPHABET.setAddress(addressTestData.ADDRESS_DTO_COUNRTY_ALPHABET);

		CREATE_WORK_REQUEST_ADDRESS_LENGTH.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_ADDRESS_LENGTH.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_ADDRESS_LENGTH.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_ADDRESS_LENGTH.setAddress(addressTestData.ADDRESS_DTO_ADDRESS_LENGTH);

		CREATE_WORK_REQUEST_NULL_CUSTOMERID.setCustomerId(null);
		CREATE_WORK_REQUEST_NULL_CUSTOMERID.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NULL_CUSTOMERID.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NULL_CUSTOMERID.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_NULL_CUSTOMERID.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID.setCustomerId(NegativeCustomerId);
		CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_NEGATIVE_CUSTOMERID.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID.setCustomerId(ALPHACHAR_OWNERID_ID);
		CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_AlPHA_CHAR_CUSTOMERID.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_LENGTH_CUSTOMERID.setCustomerId(LENGTHEXCEED_OWNERID_ID);
		CREATE_WORK_REQUEST_LENGTH_CUSTOMERID.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_LENGTH_CUSTOMERID.setWorkTye(WORK_TYPE);
		CREATE_WORK_REQUEST_LENGTH_CUSTOMERID.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_LENGTH_CUSTOMERID.setDescription(DESCRIPTION);

//		CREATE_WORK_REQUEST_INVALID_CUSTOMERID.setCustomerId(INVALID_OWNERID_ID);
//		CREATE_WORK_REQUEST_INVALID_CUSTOMERID.setDescription(DESCRIPTION);
//		CREATE_WORK_REQUEST_INVALID_CUSTOMERID.setWorkTye(WORK_TYPE);
//		CREATE_WORK_REQUEST_INVALID_CUSTOMERID.setAddress(addressTestData.ADDRESS_DTO);
//		CREATE_WORK_REQUEST_INVALID_CUSTOMERID.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE.setWorkTye(WorkType_Digit_Special_Characer);
		CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_DIGIT_SPECIAL_CHARACTER_WORKTYPE.setDescription(DESCRIPTION);

		CREATE_WORK_REQUEST_INVALID_WORKTYPE.setCustomerId(OWNER_ID);
		CREATE_WORK_REQUEST_INVALID_WORKTYPE.setDescription(DESCRIPTION);
		CREATE_WORK_REQUEST_INVALID_WORKTYPE.setWorkTye(InvalidWorkType);
		CREATE_WORK_REQUEST_INVALID_WORKTYPE.setAddress(addressTestData.ADDRESS_DTO);
		CREATE_WORK_REQUEST_INVALID_WORKTYPE.setDescription(DESCRIPTION);
	}

}
